{"ast":null,"code":"var _jsxFileName = \"/root/Todo_app/frontend/src/Modal/RegisterModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { useAuth } from '../Context/authContext';\nimport ResponseModal from './ResponseModal';\nimport './Modal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterModal = ({\n  hideModal,\n  switchToLogin\n}) => {\n  _s();\n  const {\n    signup,\n    doResendEmailVerification\n  } = useAuth();\n  const [formState, setFormState] = useState({\n    formData: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    formErrors: {},\n    passwordRequirements: {\n      length: false,\n      lowercase: false,\n      uppercase: false,\n      digit: false,\n      specialChar: false\n    }\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [responseMessage, setResponseMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [resendMessage, setResendMessage] = useState('');\n  const [showResponseModal, setShowResponseModal] = useState(false);\n  const handleResendVerification = async () => {\n    const response = await doResendEmailVerification(formState.formData.email);\n    setResendMessage(response);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState(prevState => {\n      const updatedFormData = {\n        ...prevState.formData,\n        [name]: value\n      };\n      const updatedPasswordRequirements = name === 'password' ? checkPasswordRequirements(value) : prevState.passwordRequirements;\n      return {\n        ...prevState,\n        formData: updatedFormData,\n        passwordRequirements: updatedPasswordRequirements\n      };\n    });\n  };\n  const togglePasswordVisibility = () => setShowPassword(!showPassword);\n  const checkPasswordRequirements = password => ({\n    length: password.length >= 8,\n    lowercase: /[a-z]/.test(password),\n    uppercase: /[A-Z]/.test(password),\n    digit: /[0-9]/.test(password),\n    specialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password)\n  });\n  const validateFormData = () => {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    } = formState.formData;\n    const errors = {};\n    if (!firstName) errors.firstName = 'First Name is required';\n    if (!lastName) errors.lastName = 'Last Name is required';\n    if (!email) errors.email = 'Email is required';\n    if (!password) errors.password = 'Password is required';else {\n      const reqs = checkPasswordRequirements(password);\n      if (!reqs.length) errors.password = 'Password must be at least 8 characters long';\n      if (!reqs.lowercase) errors.password = 'Password must contain at least one lowercase letter';\n      if (!reqs.uppercase) errors.password = 'Password must contain at least one uppercase letter';\n      if (!reqs.digit) errors.password = 'Password must contain at least one digit';\n      if (!reqs.specialChar) errors.password = 'Password must contain at least one special character';\n    }\n    if (password !== confirmPassword) errors.confirmPassword = 'Passwords do not match';\n    setFormState(prevState => ({\n      ...prevState,\n      formErrors: errors\n    }));\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateFormData()) {\n      console.log('Form Data Submitted:', formState.formData);\n      const {\n        email,\n        password,\n        firstName,\n        lastName\n      } = formState.formData;\n      try {\n        await signup(email, password, firstName, lastName);\n        console.log('User registered successfully');\n        setResponseMessage(\"A verification email has been sent to your email address. Please check your inbox and follow the instructions to verify your account.\");\n        setShowResponseModal(true);\n      } catch (error) {\n        if (error.code === 'auth/email-already-in-use') {\n          setErrorMessage('The email address is already in use by another account.');\n        } else {\n          setErrorMessage('Error registering user: ' + error.message);\n        }\n        console.log('Error registering user:', errorMessage);\n      }\n    }\n  };\n  const handleGoogleSignUp = e => {\n    // sign up logic here\n  };\n  const onClose = () => {\n    setShowResponseModal(false);\n    hideModal();\n  };\n  const {\n    formData,\n    formErrors,\n    passwordRequirements\n  } = formState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalZone\",\n    children: showResponseModal ? /*#__PURE__*/_jsxDEV(ResponseModal, {\n      message: responseMessage,\n      onResend: handleResendVerification,\n      resendMessage: resendMessage,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"closeModalBtn\",\n          onClick: () => hideModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [['firstName', 'lastName', 'email', 'password', 'confirmPassword'].map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formGroup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required\",\n              htmlFor: field,\n              children: field === 'confirmPassword' ? 'Confirm Password' : field.charAt(0).toUpperCase() + field.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputGroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: field.endsWith('assword') && !showPassword ? 'password' : field === 'email' ? 'email' : 'text',\n                id: field,\n                name: field,\n                placeholder: field === 'confirmPassword' || field === 'password' ? '********' : field === 'email' ? 'example@email.com' : 'John',\n                value: formData[field],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), field.endsWith('assword') && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"toggle-password-btn\",\n                onClick: togglePasswordVisibility,\n                children: showPassword ? /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), formErrors[field] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"formError\",\n              children: formErrors[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 39\n            }, this), errorMessage && field === 'email' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"formError\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 55\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)), formData.password && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"passwordRequirements\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: passwordRequirements.length ? 'green' : 'red'\n              },\n              children: \"At least 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: passwordRequirements.lowercase ? 'green' : 'red'\n              },\n              children: \"At least one lowercase letter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: passwordRequirements.uppercase ? 'green' : 'red'\n              },\n              children: \"At least one uppercase letter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: passwordRequirements.digit ? 'green' : 'red'\n              },\n              children: \"At least one digit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: passwordRequirements.specialChar ? 'green' : 'red'\n              },\n              children: \"At least one special character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalFooter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"closeModalBtn\",\n                onClick: () => hideModal(false),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"saveModalBtn\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footerText\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: switchToLogin,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"SignUp with \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleGoogleSignUp,\n                  children: \"Google\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterModal, \"OX/s9gcIANgnQBY2Jm+8d748//g=\", false, function () {\n  return [useAuth];\n});\n_c = RegisterModal;\nexport default RegisterModal;\nvar _c;\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"names":["React","useState","FaEye","FaEyeSlash","useAuth","ResponseModal","jsxDEV","_jsxDEV","RegisterModal","hideModal","switchToLogin","_s","signup","doResendEmailVerification","formState","setFormState","formData","firstName","lastName","email","password","confirmPassword","formErrors","passwordRequirements","length","lowercase","uppercase","digit","specialChar","showPassword","setShowPassword","responseMessage","setResponseMessage","errorMessage","setErrorMessage","resendMessage","setResendMessage","showResponseModal","setShowResponseModal","handleResendVerification","response","handleChange","e","name","value","target","prevState","updatedFormData","updatedPasswordRequirements","checkPasswordRequirements","togglePasswordVisibility","test","validateFormData","errors","reqs","Object","keys","handleSubmit","preventDefault","console","log","error","code","message","handleGoogleSignUp","onClose","className","children","onResend","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","map","field","index","htmlFor","charAt","toUpperCase","slice","type","endsWith","id","placeholder","onChange","style","color","_c","$RefreshReg$"],"sources":["/root/Todo_app/frontend/src/Modal/RegisterModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { useAuth } from '../Context/authContext';\nimport ResponseModal from './ResponseModal';\nimport './Modal.scss';\n\nconst RegisterModal = ({ hideModal, switchToLogin }) => {\n  const { signup, doResendEmailVerification } = useAuth();\n  const [formState, setFormState] = useState({\n    formData: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    formErrors: {},\n    passwordRequirements: {\n      length: false,\n      lowercase: false,\n      uppercase: false,\n      digit: false,\n      specialChar: false,\n    }\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [responseMessage, setResponseMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [resendMessage, setResendMessage] = useState('');\n  const [showResponseModal, setShowResponseModal] = useState(false);\n\n  const handleResendVerification = async () => {\n      const response = await doResendEmailVerification(formState.formData.email);\n      setResendMessage(response);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormState((prevState) => {\n      const updatedFormData = {\n        ...prevState.formData,\n        [name]: value\n      };\n\n      const updatedPasswordRequirements = \n        name === 'password' ? checkPasswordRequirements(value) : prevState.passwordRequirements;\n\n      return {\n        ...prevState,\n        formData: updatedFormData,\n        passwordRequirements: updatedPasswordRequirements,\n      };\n    });\n  };\n\n  const togglePasswordVisibility = () => setShowPassword(!showPassword);\n\n  const checkPasswordRequirements = (password) => ({\n    length: password.length >= 8,\n    lowercase: /[a-z]/.test(password),\n    uppercase: /[A-Z]/.test(password),\n    digit: /[0-9]/.test(password),\n    specialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\n  });\n\n  const validateFormData = () => {\n    const { firstName, lastName, email, password, confirmPassword } = formState.formData;\n    const errors = {};\n\n    if (!firstName) errors.firstName = 'First Name is required';\n    if (!lastName) errors.lastName = 'Last Name is required';\n    if (!email) errors.email = 'Email is required';\n    if (!password) errors.password = 'Password is required';\n    else {\n      const reqs = checkPasswordRequirements(password);\n      if (!reqs.length) errors.password = 'Password must be at least 8 characters long';\n      if (!reqs.lowercase) errors.password = 'Password must contain at least one lowercase letter';\n      if (!reqs.uppercase) errors.password = 'Password must contain at least one uppercase letter';\n      if (!reqs.digit) errors.password = 'Password must contain at least one digit';\n      if (!reqs.specialChar) errors.password = 'Password must contain at least one special character';\n    }\n    if (password !== confirmPassword) errors.confirmPassword = 'Passwords do not match';\n\n    setFormState((prevState) => ({ ...prevState, formErrors: errors }));\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validateFormData()) {\n      console.log('Form Data Submitted:', formState.formData);\n      const { email, password, firstName, lastName } = formState.formData;\n      try {\n        await signup(email, password, firstName, lastName);\n        console.log('User registered successfully');\n        setResponseMessage(\"A verification email has been sent to your email address. Please check your inbox and follow the instructions to verify your account.\");\n        setShowResponseModal(true);\n      } catch (error) {\n        if (error.code === 'auth/email-already-in-use') {\n          setErrorMessage('The email address is already in use by another account.');\n        } else {\n          setErrorMessage('Error registering user: ' + error.message);\n        }\n        console.log('Error registering user:', errorMessage);\n      }\n    }\n  };\n\n  const handleGoogleSignUp = (e) => {\n    // sign up logic here\n  }\n\n  const onClose = () => {\n    setShowResponseModal(false);\n    hideModal();\n  };\n\n  const { formData, formErrors, passwordRequirements } = formState;\n\n  return (\n    <div className='modalZone'>\n      {showResponseModal ? (\n        <ResponseModal \n          message={responseMessage}\n          onResend={handleResendVerification}\n          resendMessage={resendMessage}\n          onClose={onClose}\n        />\n      ) : (\n        <div className='modalContainer'>\n        <div className='modalHeader'>\n          <h2>Register Your Profile</h2>\n          <button className='closeModalBtn' onClick={() => hideModal(false)}>&times;</button>\n        </div>\n        <div className='modalBody'>\n          <form onSubmit={handleSubmit}>\n            {['firstName', 'lastName', 'email', 'password', 'confirmPassword'].map((field, index) => (\n              <div key={index} className='formGroup'>\n                <label className='required' htmlFor={field}>\n                  {field === 'confirmPassword' ? 'Confirm Password' : field.charAt(0).toUpperCase() + field.slice(1)}\n                </label>\n                <div className='inputGroup'>\n                  <input\n                    type={field.endsWith('assword') && !showPassword ? 'password' : field === 'email' ? 'email' : 'text'}\n                    id={field}\n                    name={field}\n                    placeholder={field === 'confirmPassword' || field === 'password' ? '********' : field === 'email' ? 'example@email.com' : 'John'}\n                    value={formData[field]}\n                    onChange={handleChange}\n                  />\n                  {field.endsWith('assword') && (<button\n                    type=\"button\"\n                    className=\"toggle-password-btn\"\n                    onClick={togglePasswordVisibility}\n                  >\n                    {showPassword ? <FaEye /> : <FaEyeSlash />}\n                  </button>)}\n                </div>\n                {formErrors[field] && <p className='formError'>{formErrors[field]}</p>}\n                {errorMessage && field === 'email' && <p className='formError'>{errorMessage}</p>}\n              </div>\n            ))}\n            {formData.password && (\n              <ul className='passwordRequirements'>\n                <li style={{ color: passwordRequirements.length ? 'green' : 'red' }}>At least 8 characters</li>\n                <li style={{ color: passwordRequirements.lowercase ? 'green' : 'red' }}>At least one lowercase letter</li>\n                <li style={{ color: passwordRequirements.uppercase ? 'green' : 'red' }}>At least one uppercase letter</li>\n                <li style={{ color: passwordRequirements.digit ? 'green' : 'red' }}>At least one digit</li>\n                <li style={{ color: passwordRequirements.specialChar ? 'green' : 'red' }}>At least one special character</li>\n              </ul>\n            )}\n            <div className='modalFooter'>\n              <div className='Btn'>\n                <button type='button' className='closeModalBtn' onClick={() => hideModal(false)}>Close</button>\n                <button type='submit' className='saveModalBtn'>Register</button>\n              </div>\n              <div className='footerText'>\n                <p>Already have an account? <button onClick={switchToLogin}>Login</button></p>\n                <p>SignUp with <button onClick={handleGoogleSignUp}>Google</button></p>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegisterModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}