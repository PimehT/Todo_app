{"ast":null,"code":"var _jsxFileName = \"/root/Todo_app/frontend/src/Context/authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth, googleProvider, updateProfile } from '../firebase/firebase';\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, RecaptchaVerifier, sendEmailVerification } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setUserLoggedIn(!!user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const signup = async (email, password, firstName, lastName) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      await updateProfile(user, {\n        displayName: `${firstName} ${lastName}`\n      });\n      await sendEmailVerification(user);\n      return user;\n    } catch (error) {\n      console.error('Error during signup:', error);\n      throw error;\n    }\n  };\n  const loginWithEmail = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n  const doResendEmailVerification = async () => {\n    try {\n      await sendEmailVerification(currentUser);\n      console.log('Verification email resent.');\n      return 'Verification email resent';\n    } catch (error) {\n      if (error.code === 'auth/too-many-requests') {\n        return 'Too many requests. Try again later.';\n      } else if (error.code === 'auth/user-not-found') {\n        return 'User not found. Please register first.';\n      } else {\n        return 'Failed to resend verification email.';\n      }\n    }\n  };\n  const loginWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n  const setupRecaptcha = containerId => {\n    if (typeof window !== 'undefined') {\n      window.recaptchaVerifier = new RecaptchaVerifier(containerId, {\n        'size': 'invisible',\n        'callback': response => {\n          console.log(\"Recaptcha verified\");\n        }\n      }, auth);\n    }\n  };\n  const logout = () => signOut(auth);\n  const openLoginModal = () => setIsLoginModalOpen(true);\n  const closeLoginModal = () => setIsLoginModalOpen(false);\n  const value = {\n    currentUser,\n    userLoggedIn,\n    signup,\n    loginWithEmail,\n    loginWithGoogle,\n    doResendEmailVerification,\n    setupRecaptcha,\n    logout,\n    isLoginModalOpen,\n    openLoginModal,\n    closeLoginModal\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"K0EZlqquIwSVVLl9WKU2ZSlWO6I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","googleProvider","updateProfile","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","RecaptchaVerifier","sendEmailVerification","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","userLoggedIn","setUserLoggedIn","isLoginModalOpen","setIsLoginModalOpen","unsubscribe","user","signup","email","password","firstName","lastName","userCredential","displayName","error","console","loginWithEmail","doResendEmailVerification","log","code","loginWithGoogle","setupRecaptcha","containerId","window","recaptchaVerifier","response","logout","openLoginModal","closeLoginModal","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/Todo_app/frontend/src/Context/authContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth, googleProvider, updateProfile } from '../firebase/firebase';\nimport { \n  signInWithPopup, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  RecaptchaVerifier,\n  sendEmailVerification,\n} from 'firebase/auth';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setUserLoggedIn(!!user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const signup = async (email, password, firstName, lastName) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      await updateProfile(user, {\n        displayName: `${firstName} ${lastName}`\n      });\n      await sendEmailVerification(user);\n      return user;\n    } catch (error) {\n      console.error('Error during signup:', error);\n      throw error;\n    }\n  };\n\n  const loginWithEmail = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const doResendEmailVerification = async () => {\n    try {\n      await sendEmailVerification(currentUser);\n      console.log('Verification email resent.');\n      return ('Verification email resent');\n    } catch (error) {\n      if (error.code === 'auth/too-many-requests') {\n        return ('Too many requests. Try again later.');\n      } else if (error.code === 'auth/user-not-found') {\n        return ('User not found. Please register first.');\n      } else {\n        return ('Failed to resend verification email.');\n      }\n    }\n  }\n\n  const loginWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  const setupRecaptcha = (containerId) => {\n    if (typeof window !== 'undefined') {\n      window.recaptchaVerifier = new RecaptchaVerifier(containerId, {\n        'size': 'invisible',\n        'callback': (response) => {\n          console.log(\"Recaptcha verified\");\n        }\n      }, auth);\n    }\n  };\n\n  const logout = () => signOut(auth);\n\n  const openLoginModal = () => setIsLoginModalOpen(true);\n  const closeLoginModal = () => setIsLoginModalOpen(false);\n\n  const value = {\n    currentUser,\n    userLoggedIn,\n    signup,\n    loginWithEmail,\n    loginWithGoogle,\n    doResendEmailVerification,\n    setupRecaptcha,\n    logout,\n    isLoginModalOpen,\n    openLoginModal,\n    closeLoginModal,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}