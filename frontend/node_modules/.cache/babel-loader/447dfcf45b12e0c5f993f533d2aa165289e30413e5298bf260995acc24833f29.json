{"ast":null,"code":"var _jsxFileName = \"/root/Todo_app/frontend/src/Task/Task.js\",\n  _s = $RefreshSig$();\n// src/components/Task.js\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Add from '../assets/plus-solid.svg';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = () => {\n  _s();\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [allTasks, setAllTasks] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newDueDate, setNewDueDate] = useState(\"\");\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const handleSubmitTask = e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n\n    if (newTitle.trim() === \"\") {\n      alert(\"Task title cannot be empty\");\n      return;\n    }\n    const newTaskItem = {\n      id: uuidv4(),\n      title: newTitle,\n      description: newDescription,\n      dueDate: newDueDate,\n      completed: false,\n      created: new Date().toLocaleString(),\n      updated: new Date().toLocaleString(),\n      isEditing: false\n    };\n    console.log(newTaskItem);\n    const updatedTasksArr = [...allTasks, newTaskItem];\n    setAllTasks(updatedTasksArr);\n    setNewTitle(\"\");\n    setNewDescription(\"\");\n    setNewDueDate(\"\");\n    localStorage.setItem('todolist', JSON.stringify(updatedTasksArr));\n  };\n  const handleDeleteTask = id => {\n    const reducedTasks = allTasks.filter(task => task.id !== id);\n    localStorage.setItem('todolist', JSON.stringify(reducedTasks));\n    setAllTasks(reducedTasks);\n  };\n  const toggleTaskCompletion = id => {\n    const updatedTasks = allTasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setAllTasks(updatedTasks);\n    localStorage.setItem('todolist', JSON.stringify(updatedTasks));\n  };\n  const handleEditTask = (taskId, newTitle, newDescription, newDueDate) => {\n    const updatedTasks = allTasks.map(task => task.id === taskId ? {\n      ...task,\n      title: newTitle,\n      description: newDescription,\n      dueDate: newDueDate,\n      isEditing: false\n    } : task);\n    setAllTasks(updatedTasks);\n    localStorage.setItem('todolist', JSON.stringify(updatedTasks));\n  };\n  const toggleEditMode = taskId => {\n    const updatedTasks = allTasks.map(task => task.id === taskId ? {\n      ...task,\n      isEditing: !task.isEditing\n    } : task);\n    setAllTasks(updatedTasks);\n  };\n  const toggleRotate = e => {\n    e.currentTarget.classList.toggle('rotated');\n    setIsFormVisible(!isFormVisible);\n  };\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('todolist'));\n    if (savedTasks) {\n      setAllTasks(savedTasks);\n    }\n  }, []);\n  const displayedTasks = isCompleteScreen ? allTasks.filter(task => task.completed) : allTasks.filter(task => !task.completed);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todo-wrapper container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-task\",\n      onClick: toggleRotate,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Add,\n        alt: \"add icon to display form to add task\",\n        className: \"icon add-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(TaskForm, {\n      newTitle: newTitle,\n      setNewTitle: setNewTitle,\n      newDescription: newDescription,\n      setNewDescription: setNewDescription,\n      newDueDate: newDueDate,\n      setNewDueDate: setNewDueDate,\n      handleSubmitTask: handleSubmitTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `secondaryBtn ${!isCompleteScreen && 'active'}`,\n        onClick: () => setIsCompleteScreen(false),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `secondaryBtn ${isCompleteScreen && 'active'}`,\n        onClick: () => setIsCompleteScreen(true),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: displayedTasks,\n      toggleTaskCompletion: toggleTaskCompletion,\n      handleDeleteTask: handleDeleteTask,\n      handleEditTask: handleEditTask,\n      toggleEditMode: toggleEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"vIm8OmrNBoPVruIds4TJq1dqFP4=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","Add","TaskForm","TaskList","jsxDEV","_jsxDEV","Task","_s","isFormVisible","setIsFormVisible","allTasks","setAllTasks","newTitle","setNewTitle","newDescription","setNewDescription","newDueDate","setNewDueDate","isCompleteScreen","setIsCompleteScreen","handleSubmitTask","e","preventDefault","trim","alert","newTaskItem","id","title","description","dueDate","completed","created","Date","toLocaleString","updated","isEditing","console","log","updatedTasksArr","localStorage","setItem","JSON","stringify","handleDeleteTask","reducedTasks","filter","task","toggleTaskCompletion","updatedTasks","map","handleEditTask","taskId","toggleEditMode","toggleRotate","currentTarget","classList","toggle","savedTasks","parse","getItem","displayedTasks","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","tasks","_c","$RefreshReg$"],"sources":["/root/Todo_app/frontend/src/Task/Task.js"],"sourcesContent":["// src/components/Task.js\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Add from '../assets/plus-solid.svg';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport './Task.scss';\n\nconst Task = () => {\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [allTasks, setAllTasks] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newDueDate, setNewDueDate] = useState(\"\");\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n\n  const handleSubmitTask = (e) => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n\n    if (newTitle.trim() === \"\") {\n      alert(\"Task title cannot be empty\");\n      return;\n    }\n\n    const newTaskItem = {\n      id: uuidv4(),\n      title: newTitle,\n      description: newDescription,\n      dueDate: newDueDate,\n      completed: false,\n      created: new Date().toLocaleString(),\n      updated: new Date().toLocaleString(),\n      isEditing: false,\n    };\n\n    console.log(newTaskItem);\n\n    const updatedTasksArr = [...allTasks, newTaskItem];\n    setAllTasks(updatedTasksArr);\n    setNewTitle(\"\");\n    setNewDescription(\"\");\n    setNewDueDate(\"\");\n    localStorage.setItem('todolist', JSON.stringify(updatedTasksArr));\n  };\n\n  const handleDeleteTask = (id) => {\n    const reducedTasks = allTasks.filter((task) => task.id !== id);\n    localStorage.setItem('todolist', JSON.stringify(reducedTasks));\n    setAllTasks(reducedTasks);\n  };\n\n  const toggleTaskCompletion = (id) => {\n    const updatedTasks = allTasks.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setAllTasks(updatedTasks);\n    localStorage.setItem('todolist', JSON.stringify(updatedTasks));\n  };\n\n  const handleEditTask = (taskId, newTitle, newDescription, newDueDate) => {\n    const updatedTasks = allTasks.map(task => \n      task.id === taskId ? { ...task, title: newTitle, description: newDescription, dueDate: newDueDate, isEditing: false } : task\n    );\n    setAllTasks(updatedTasks);\n    localStorage.setItem('todolist', JSON.stringify(updatedTasks));\n  };\n\n  const toggleEditMode = (taskId) => {\n    const updatedTasks = allTasks.map(task =>\n      task.id === taskId ? { ...task, isEditing: !task.isEditing } : task\n    );\n    setAllTasks(updatedTasks);\n  };\n\n  const toggleRotate = (e) => {\n    e.currentTarget.classList.toggle('rotated');\n    setIsFormVisible(!isFormVisible);\n  };\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('todolist'));\n    if (savedTasks) {\n      setAllTasks(savedTasks);\n    }\n  }, []);\n\n  const displayedTasks = isCompleteScreen\n    ? allTasks.filter((task) => task.completed)\n    : allTasks.filter((task) => !task.completed);\n\n  return (\n    <section className=\"todo-wrapper container\">\n      <div className=\"create-task\" onClick={toggleRotate}>\n        <img\n          src={Add}\n          alt=\"add icon to display form to add task\"\n          className=\"icon add-icon\"\n        />\n        <p>Add task</p>\n      </div>\n\n      {isFormVisible && (\n        <TaskForm\n          newTitle={newTitle}\n          setNewTitle={setNewTitle}\n          newDescription={newDescription}\n          setNewDescription={setNewDescription}\n          newDueDate={newDueDate}\n          setNewDueDate={setNewDueDate}\n          handleSubmitTask={handleSubmitTask}\n        />\n      )}\n\n      <div className=\"btn-area\">\n        <button\n          className={`secondaryBtn ${!isCompleteScreen && 'active'}`}\n          onClick={() => setIsCompleteScreen(false)}\n        >\n          Todo\n        </button>\n        <button\n          className={`secondaryBtn ${isCompleteScreen && 'active'}`}\n          onClick={() => setIsCompleteScreen(true)}\n        >\n          Completed\n        </button>\n      </div>\n\n      <TaskList\n        tasks={displayedTasks}\n        toggleTaskCompletion={toggleTaskCompletion}\n        handleDeleteTask={handleDeleteTask}\n        handleEditTask={handleEditTask}\n        toggleEditMode={toggleEditMode}\n      />\n    </section>\n  );\n};\n\nexport default Task;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMuB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAIV,QAAQ,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BC,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAE1B,MAAM,CAAC,CAAC;MACZ2B,KAAK,EAAEf,QAAQ;MACfgB,WAAW,EAAEd,cAAc;MAC3Be,OAAO,EAAEb,UAAU;MACnBc,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;MACpCC,OAAO,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;MACpCE,SAAS,EAAE;IACb,CAAC;IAEDC,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;IAExB,MAAMa,eAAe,GAAG,CAAC,GAAG5B,QAAQ,EAAEe,WAAW,CAAC;IAClDd,WAAW,CAAC2B,eAAe,CAAC;IAC5BzB,WAAW,CAAC,EAAE,CAAC;IACfE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,aAAa,CAAC,EAAE,CAAC;IACjBsB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,eAAe,CAAC,CAAC;EACnE,CAAC;EAED,MAAMK,gBAAgB,GAAIjB,EAAE,IAAK;IAC/B,MAAMkB,YAAY,GAAGlC,QAAQ,CAACmC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACpB,EAAE,KAAKA,EAAE,CAAC;IAC9Da,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACE,YAAY,CAAC,CAAC;IAC9DjC,WAAW,CAACiC,YAAY,CAAC;EAC3B,CAAC;EAED,MAAMG,oBAAoB,GAAIrB,EAAE,IAAK;IACnC,MAAMsB,YAAY,GAAGtC,QAAQ,CAACuC,GAAG,CAAEH,IAAI,IACrCA,IAAI,CAACpB,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGoB,IAAI;MAAEhB,SAAS,EAAE,CAACgB,IAAI,CAAChB;IAAU,CAAC,GAAGgB,IAC7D,CAAC;IACDnC,WAAW,CAACqC,YAAY,CAAC;IACzBT,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACM,YAAY,CAAC,CAAC;EAChE,CAAC;EAED,MAAME,cAAc,GAAGA,CAACC,MAAM,EAAEvC,QAAQ,EAAEE,cAAc,EAAEE,UAAU,KAAK;IACvE,MAAMgC,YAAY,GAAGtC,QAAQ,CAACuC,GAAG,CAACH,IAAI,IACpCA,IAAI,CAACpB,EAAE,KAAKyB,MAAM,GAAG;MAAE,GAAGL,IAAI;MAAEnB,KAAK,EAAEf,QAAQ;MAAEgB,WAAW,EAAEd,cAAc;MAAEe,OAAO,EAAEb,UAAU;MAAEmB,SAAS,EAAE;IAAM,CAAC,GAAGW,IAC1H,CAAC;IACDnC,WAAW,CAACqC,YAAY,CAAC;IACzBT,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACM,YAAY,CAAC,CAAC;EAChE,CAAC;EAED,MAAMI,cAAc,GAAID,MAAM,IAAK;IACjC,MAAMH,YAAY,GAAGtC,QAAQ,CAACuC,GAAG,CAACH,IAAI,IACpCA,IAAI,CAACpB,EAAE,KAAKyB,MAAM,GAAG;MAAE,GAAGL,IAAI;MAAEX,SAAS,EAAE,CAACW,IAAI,CAACX;IAAU,CAAC,GAAGW,IACjE,CAAC;IACDnC,WAAW,CAACqC,YAAY,CAAC;EAC3B,CAAC;EAED,MAAMK,YAAY,GAAIhC,CAAC,IAAK;IAC1BA,CAAC,CAACiC,aAAa,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;IAC3C/C,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAM2D,UAAU,GAAGhB,IAAI,CAACiB,KAAK,CAACnB,YAAY,CAACoB,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,IAAIF,UAAU,EAAE;MACd9C,WAAW,CAAC8C,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAG1C,gBAAgB,GACnCR,QAAQ,CAACmC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAChB,SAAS,CAAC,GACzCpB,QAAQ,CAACmC,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAChB,SAAS,CAAC;EAE9C,oBACEzB,OAAA;IAASwD,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACzCzD,OAAA;MAAKwD,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEV,YAAa;MAAAS,QAAA,gBACjDzD,OAAA;QACE2D,GAAG,EAAE/D,GAAI;QACTgE,GAAG,EAAC,sCAAsC;QAC1CJ,SAAS,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFhE,OAAA;QAAAyD,QAAA,EAAG;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EAEL7D,aAAa,iBACZH,OAAA,CAACH,QAAQ;MACPU,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA,iBAAkB;MACrCC,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BG,gBAAgB,EAAEA;IAAiB;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF,eAEDhE,OAAA;MAAKwD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBzD,OAAA;QACEwD,SAAS,EAAE,gBAAgB,CAAC3C,gBAAgB,IAAI,QAAQ,EAAG;QAC3D6C,OAAO,EAAEA,CAAA,KAAM5C,mBAAmB,CAAC,KAAK,CAAE;QAAA2C,QAAA,EAC3C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThE,OAAA;QACEwD,SAAS,EAAE,gBAAgB3C,gBAAgB,IAAI,QAAQ,EAAG;QAC1D6C,OAAO,EAAEA,CAAA,KAAM5C,mBAAmB,CAAC,IAAI,CAAE;QAAA2C,QAAA,EAC1C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENhE,OAAA,CAACF,QAAQ;MACPmE,KAAK,EAAEV,cAAe;MACtBb,oBAAoB,EAAEA,oBAAqB;MAC3CJ,gBAAgB,EAAEA,gBAAiB;MACnCO,cAAc,EAAEA,cAAe;MAC/BE,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAAC9D,EAAA,CAjIID,IAAI;AAAAiE,EAAA,GAAJjE,IAAI;AAmIV,eAAeA,IAAI;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}