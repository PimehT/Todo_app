{"ast":null,"code":"var _jsxFileName = \"/root/Todo_app/frontend/src/Task/TaskItem.js\",\n  _s = $RefreshSig$();\n// src/components/TaskItem.js\nimport React, { useState } from 'react';\nimport Check from '../assets/check-solid.svg';\nimport Remove from '../assets/trash-can-regular.svg';\nimport EditIcon from '../assets/pen-to-square-regular.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  toggleTaskCompletion,\n  handleDeleteTask,\n  handleEditTask,\n  toggleEditMode\n}) => {\n  _s();\n  const [newTitle, setNewTitle] = useState(task.title);\n  const [newDescription, setNewDescription] = useState(task.description);\n  const [newDueDate, setNewDueDate] = useState(task.dueDate);\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleEditTask(task.id, newTitle, newDescription, newDueDate);\n  };\n  const formatDueDate = dueDate => {\n    if (!dueDate) {\n      return \"\";\n    }\n    const date = new Date(dueDate);\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    };\n    const formattedDay = isTodayOrTomorrow(dueDate);\n    const currentYear = new Date().getFullYear();\n    const taskYear = date.getFullYear();\n    if (currentYear === taskYear && formattedDay !== 'Other') {\n      return `${formattedDay} at ${date.toLocaleString('en-US', options)}`;\n    } else {\n      options.weekday = 'short';\n    }\n    const formattedDate = date.toLocaleString('en-US', options);\n    if (currentYear !== taskYear) {\n      return `${formattedDate}, ${taskYear}`;\n    }\n    return formattedDate;\n  };\n  const isTodayOrTomorrow = dueDate => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    const tomorrow = new Date();\n    tomorrow.setDate(today.getDate() + 1);\n\n    // Remove time part for comparison\n    const isSameDay = (date1, date2) => date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n    if (isSameDay(date, today)) {\n      return 'Today';\n    } else if (isSameDay(date, tomorrow)) {\n      return 'Tomorrow';\n    } else {\n      return 'Other';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-list-item ${task.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `checker-${task.id}`,\n      checked: task.completed,\n      onChange: () => toggleTaskCompletion(task.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `checker-${task.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Check,\n        alt: \"check icon of the task\",\n        className: \"icon check-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), task.isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"text-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value),\n        placeholder: \"Task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value),\n        placeholder: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newDueDate,\n        onChange: e => setNewDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"primaryBtn\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"text-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDueDate(task.dueDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: EditIcon,\n      alt: \"edit icon of the task\",\n      className: \"icon edit-icon\",\n      onClick: () => toggleEditMode(task.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Remove,\n      alt: \"delete icon of the task\",\n      className: \"icon remove-icon\",\n      onClick: () => handleDeleteTask(task.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"0Bg7ExxDeQDAOEmtzq5Gn8Uekmo=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","Check","Remove","EditIcon","jsxDEV","_jsxDEV","TaskItem","task","toggleTaskCompletion","handleDeleteTask","handleEditTask","toggleEditMode","_s","newTitle","setNewTitle","title","newDescription","setNewDescription","description","newDueDate","setNewDueDate","dueDate","handleSubmit","e","preventDefault","id","formatDueDate","date","Date","options","hour","minute","hour12","formattedDay","isTodayOrTomorrow","currentYear","getFullYear","taskYear","toLocaleString","weekday","formattedDate","today","tomorrow","setDate","getDate","isSameDay","date1","date2","getMonth","className","completed","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","isEditing","onSubmit","value","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/root/Todo_app/frontend/src/Task/TaskItem.js"],"sourcesContent":["// src/components/TaskItem.js\nimport React, { useState } from 'react';\nimport Check from '../assets/check-solid.svg';\nimport Remove from '../assets/trash-can-regular.svg';\nimport EditIcon from '../assets/pen-to-square-regular.svg';\n\nconst TaskItem = ({\n  task,\n  toggleTaskCompletion,\n  handleDeleteTask,\n  handleEditTask,\n  toggleEditMode,\n}) => {\n  const [newTitle, setNewTitle] = useState(task.title);\n  const [newDescription, setNewDescription] = useState(task.description);\n  const [newDueDate, setNewDueDate] = useState(task.dueDate);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleEditTask(task.id, newTitle, newDescription, newDueDate);\n  };\n\n  const formatDueDate = (dueDate) => {\n    if (!dueDate) {\n      return \"\";\n    }\n    const date = new Date(dueDate);\n    const options = { hour: 'numeric', minute: 'numeric', hour12: true };\n    \n    const formattedDay = isTodayOrTomorrow(dueDate);\n    const currentYear = new Date().getFullYear();\n    const taskYear = date.getFullYear();\n\n    if (currentYear === taskYear && formattedDay !== 'Other') {\n      return `${formattedDay} at ${date.toLocaleString('en-US', options)}`;\n    } else {\n      options.weekday = 'short';\n    }\n  \n    const formattedDate = date.toLocaleString('en-US', options);\n  \n    if (currentYear !== taskYear) {\n      return `${formattedDate}, ${taskYear}`;\n    }\n  \n    return formattedDate;\n  };\n\n  const isTodayOrTomorrow = (dueDate) => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    const tomorrow = new Date();\n    tomorrow.setDate(today.getDate() + 1);\n  \n    // Remove time part for comparison\n    const isSameDay = (date1, date2) => \n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate();\n  \n    if (isSameDay(date, today)) {\n      return 'Today';\n    } else if (isSameDay(date, tomorrow)) {\n      return 'Tomorrow';\n    } else {\n      return 'Other';\n    }\n  };\n\n  return (\n    <div className={`todo-list-item ${task.completed ? 'completed' : ''}`}>\n      <input\n        type=\"checkbox\"\n        id={`checker-${task.id}`}\n        checked={task.completed}\n        onChange={() => toggleTaskCompletion(task.id)}\n      />\n      <label htmlFor={`checker-${task.id}`}>\n        <img\n          src={Check}\n          alt=\"check icon of the task\"\n          className=\"icon check-icon\"\n        />\n      </label>\n\n      {/* Task content or Edit Mode */}\n      {task.isEditing ? (\n        <form onSubmit={handleSubmit} className=\"text-content\">\n          <input\n            type=\"text\"\n            value={newTitle}\n            onChange={(e) => setNewTitle(e.target.value)}\n            placeholder=\"Task title\"\n          />\n          <textarea\n            value={newDescription}\n            onChange={(e) => setNewDescription(e.target.value)}\n            placeholder=\"Task description\"\n          />\n          <input\n            type=\"datetime-local\"\n            value={newDueDate}\n            onChange={(e) => setNewDueDate(e.target.value)}\n          />\n          <button type=\"submit\" className=\"primaryBtn\">Save</button>\n        </form>\n      ) : (\n        <details className=\"text-content\">\n          <summary>{task.title}</summary>\n          <p>{task.description}</p>\n          <p>{formatDueDate(task.dueDate)}</p>\n        </details>\n      )}\n\n      {/* Edit and Remove Icons */}\n      <img\n        src={EditIcon}\n        alt=\"edit icon of the task\"\n        className=\"icon edit-icon\"\n        onClick={() => toggleEditMode(task.id)}\n      />\n      <img\n        src={Remove}\n        alt=\"delete icon of the task\"\n        className=\"icon remove-icon\"\n        onClick={() => handleDeleteTask(task.id)}\n      />\n    </div>\n  );\n};\n\nexport default TaskItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}